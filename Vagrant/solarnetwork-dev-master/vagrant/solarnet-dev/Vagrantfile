# -*- mode: ruby -*-
# vi: set ft=ruby :

#------------------------------------------------------------------------------
# VM Environment and parameter configuration
# These settings can be overridden by creating a file named Vagrantfile.local
#------------------------------------------------------------------------------
vm_define="solarnet1"
bootstrap_path="bootstrap.sh"
vm_name="SolarNet Dev"
basebox_name="ubuntu/xenial64"
no_of_cpus=1
memory_size=2048
vm_gui=true

git_branch="develop"
postgres_version=9.6
java_version=8

# Note xserver-xorg-legacy was only way I could find to get X to start as solardev on login from console
desktop_packages="xorg xserver-xorg-legacy fluxbox virtualbox-guest-dkms pgadmin3"

solarnet_host="solarnetworkdev.net"

# Read any user specific configuration overrides - cater for this file not existing
local_env_config_file="Vagrantfile.local"
begin
  localsettings = File.read local_env_config_file
  eval localsettings
  rescue Errno::ENOENT
    #print "No "+local_env_config_file+" found\n"
end

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.
  config.vm.define vm_define

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = basebox_name

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder ".", "/vagrant", :mount_options => ["dmode=755"]
  config.vm.synced_folder "../../bin", "/vagrant/bin", :mount_options => ["dmode=755"]
  config.vm.synced_folder "../../eclipse", "/vagrant/eclipse", :mount_options => ["dmode=755"]

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine (set to false if not installing desktop packages)
    vb.gui = vm_gui

    vb.memory = memory_size

    vb.cpus = no_of_cpus

    vb.name = vm_name
  end

  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision :shell, path: bootstrap_path, args:
    java_version.to_s + " " +
    postgres_version.to_s + " " +
    solarnet_host + " " +
    git_branch +
    (vm_gui ? " " + desktop_packages : "")
end
